<Application x:Class="Moen.KanColle.Dentan.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:rv="clr-namespace:Moen.KanColle.Dentan.View">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Dentan;component/Style/Converters.xaml" />
                <ResourceDictionary Source="/Dentan;component/Style/ListBoxStyle.xaml" />
                <ResourceDictionary Source="/Dentan;component/Style/ButtonStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
                <Setter Property="Background" Value="#333337"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="CaretBrush" Value="White"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                <ScrollViewer Name="PART_ContentHost" Margin="1"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" Value="#3F3F46"/>
                                </Trigger>
                                <Trigger Property="IsFocused" Value="true">
                                    <Setter Property="Background" Value="#3F3F46"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxStyle}" />

            <Style TargetType="{x:Type ScrollViewer}">
                <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
            </Style>
            <Style TargetType="{x:Type Control}">
                <Setter Property="UseLayoutRounding" Value="True" />
                <Setter Property="Foreground" Value="White" />
            </Style>
            
            <Style TargetType="{x:Type ToolTip}">
                <Setter Property="Background" Value="#444444" />
                <Setter Property="Foreground" Value="White" />
            </Style>
            
            <Style TargetType="{x:Type CheckBox}">
                <Setter Property="Foreground" Value="White" />
            </Style>

            <rv:MenuSeparatorStyleSelector x:Key="MenuSeparatorStyleSelector" />

            <Style TargetType="{x:Type Menu}">
                <Setter Property="Background" Value="#444444" />
                <Setter Property="Foreground" Value="White" />
            </Style>

            <SolidColorBrush x:Key="MenuSeparatorBorderBrush" Color="#333337"/>
            <SolidColorBrush x:Key="MenuItemHighlightedBackground" Color="#3E3E40"/>
            <SolidColorBrush x:Key="SubmenuItemBackground" Color="#1B1B1C"/>
            <SolidColorBrush x:Key="SubmenuItemBackgroundHighlighted" Color="#333334"/>
            <SolidColorBrush x:Key="MenuDisabledForeground" Color="#656565"/>

            <Style TargetType="{x:Type MenuItem}">
                <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Menu}}}"/>
                <Setter Property="ItemContainerStyleSelector" Value="{StaticResource MenuSeparatorStyleSelector}" />
                <Setter Property="Command" Value="{Binding Command}" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Border Name="Border" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" SnapsToDevicePixels="False">
                                <Grid Name="Grid">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Name="IconColumn" MinWidth="17" Width="Auto" SharedSizeGroup="MenuItemIconColumn"/>
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemTextColumn"/>
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumn"/>
                                        <ColumnDefinition Name="SubmenuArrowColumn" Width="14"/>
                                    </Grid.ColumnDefinitions>

                                    <ContentPresenter Name="Icon" ContentSource="Icon" VerticalAlignment="Center" />
                                    <ContentPresenter Name="Header" ContentSource="Header" RecognizesAccessKey="True" Margin="{TemplateBinding Padding}" VerticalAlignment="Center" Grid.Column="1" />
                                    <ContentPresenter Name="IGT" ContentSource="InputGestureText" Margin="8,1,8,1" VerticalAlignment="Center" Grid.Column="2"/>

                                    <Grid Name="SubmenuArrow" Margin="4,0,6,0" VerticalAlignment="Center" Grid.Column="3">
                                        <Path Name="SubmenuArrowPath" Data="M0,0 L0,8 L4,4 z" Fill="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                                    </Grid>

                                    <Popup Name="SubMenuPopup" IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                                           Placement="Right" HorizontalOffset="-1" Focusable="false"
                                           PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                                           AllowsTransparency="True">
                                        <Grid Margin="0,0,5,5">
                                            <Border Name="SubMenuBorder" Background="{StaticResource SubmenuItemBackground}" BorderBrush="{StaticResource MenuSeparatorBorderBrush}" BorderThickness="1" SnapsToDevicePixels="True">
                                                <Grid Name="SubMenu" Margin="2" Grid.IsSharedSizeScope="True">
                                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                                </Grid>
                                                <Border.Effect>
                                                    <DropShadowEffect ShadowDepth="2" Color="Black"/>
                                                </Border.Effect>
                                            </Border>
                                            <Border Name="TransitionBorder" Background="{StaticResource SubmenuItemBackground}" BorderBrush="{StaticResource SubmenuItemBackground}" BorderThickness="1"
                                            Width="0" Height="2" Margin="1,0,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" SnapsToDevicePixels="False" />
                                        </Grid>
                                    </Popup>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Role" Value="TopLevelHeader">
                                    <Setter Property="Padding" Value="6,0,6,2"/>

                                    <Setter TargetName="SubMenuPopup" Property="Placement" Value="Bottom" />
                                    <Setter TargetName="IconColumn" Property="MinWidth" Value="0" />
                                    <Setter TargetName="SubmenuArrowColumn" Property="Width" Value="Auto" />
                                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="IGT" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="SubmenuArrow" Property="Visibility" Value="Collapsed"/>
                                    <Setter TargetName="SubMenuBorder" Property="BorderThickness" Value="1, 1, 1, 1" />
                                    <Setter TargetName="SubMenu" Property="Margin" Value="2,3,2,2" />
                                    <Setter TargetName="TransitionBorder" Property="Width" Value="{Binding ActualWidth, ElementName=Grid}"/>
                                </Trigger>
                                <Trigger Property="Role" Value="TopLevelItem">
                                    <Setter Property="Padding" Value="6,0,6,2"/>

                                    <Setter TargetName="IconColumn" Property="MinWidth" Value="0" />
                                    <Setter TargetName="SubmenuArrowColumn" Property="Width" Value="Auto" />
                                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="IGT" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="SubmenuArrow" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="Role" Value="SubmenuHeader">
                                    <Setter Property="DockPanel.Dock" Value="Top" />
                                    <Setter Property="Padding" Value="10,3,0,3" />

                                    <Setter TargetName="Border" Property="MinHeight" Value="22" />
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource SubmenuItemBackground}" />
                                </Trigger>
                                <Trigger Property="Role" Value="SubmenuItem">
                                    <Setter Property="DockPanel.Dock" Value="Top"/>
                                    <Setter Property="Padding" Value="10,3,0,3"/>

                                    <Setter TargetName="Border" Property="MinHeight" Value="22" />
                                    <Setter TargetName="SubmenuArrow" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource SubmenuItemBackground}" />
                                </Trigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsHighlighted" Value="True"/>
                                        <Condition Property="Role" Value="TopLevelHeader"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource MenuItemHighlightedBackground}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsHighlighted" Value="True"/>
                                        <Condition Property="Role" Value="TopLevelItem"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource MenuItemHighlightedBackground}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsHighlighted" Value="True"/>
                                        <Condition Property="Role" Value="SubmenuHeader"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource SubmenuItemBackgroundHighlighted}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsHighlighted" Value="True"/>
                                        <Condition Property="Role" Value="SubmenuItem"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource SubmenuItemBackgroundHighlighted}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSubmenuOpen" Value="True"/>
                                        <Condition Property="Role" Value="TopLevelHeader"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource SubmenuItemBackground}"/>
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource MenuSeparatorBorderBrush}"/>
                                    <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0"/>
                                </MultiTrigger>
                                <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                                    <Setter TargetName="SubMenuPopup" Property="PopupAnimation" Value="None"/>
                                </Trigger>
                                <Trigger Property="Icon" Value="{x:Null}">
                                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource MenuDisabledForeground}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
    
</Application>
